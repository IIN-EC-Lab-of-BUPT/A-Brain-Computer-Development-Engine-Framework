# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import componentframework.facadeImpl.test_grpc.MessageManager_pb2 as MessageManager__pb2

GRPC_GENERATED_VERSION = '1.64.1'
GRPC_VERSION = grpc.__version__
EXPECTED_ERROR_RELEASE = '1.65.0'
SCHEDULED_RELEASE_DATE = 'June 25, 2024'
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    warnings.warn(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in MessageManager_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
        + f' This warning will become an error in {EXPECTED_ERROR_RELEASE},'
        + f' scheduled for release on {SCHEDULED_RELEASE_DATE}.',
        RuntimeWarning
    )


class MessageManagerServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.BindMessage = channel.unary_unary(
                '/com.coreplantform.daemonproceed.controller.grpc.MessageManagerService/BindMessage',
                request_serializer=MessageManager__pb2.BindMessageRequest.SerializeToString,
                response_deserializer=MessageManager__pb2.BindMessageResponse.FromString,
                _registered_method=True)
        self.AddListenerOnBindMessage = channel.unary_stream(
                '/com.coreplantform.daemonproceed.controller.grpc.MessageManagerService/AddListenerOnBindMessage',
                request_serializer=MessageManager__pb2.AddListenerOnBindMessageRequest.SerializeToString,
                response_deserializer=MessageManager__pb2.AddListenerOnBindMessageResponse.FromString,
                _registered_method=True)
        self.ConfirmBindMessage = channel.unary_unary(
                '/com.coreplantform.daemonproceed.controller.grpc.MessageManagerService/ConfirmBindMessage',
                request_serializer=MessageManager__pb2.ConfirmBindMessageRequest.SerializeToString,
                response_deserializer=MessageManager__pb2.ConfirmBindMessageResponse.FromString,
                _registered_method=True)
        self.GetTopicByMessageKey = channel.unary_unary(
                '/com.coreplantform.daemonproceed.controller.grpc.MessageManagerService/GetTopicByMessageKey',
                request_serializer=MessageManager__pb2.GetTopicByMessageKeyRequest.SerializeToString,
                response_deserializer=MessageManager__pb2.GetTopicByMessageKeyResponse.FromString,
                _registered_method=True)
        self.SubscribeTopic = channel.unary_stream(
                '/com.coreplantform.daemonproceed.controller.grpc.MessageManagerService/SubscribeTopic',
                request_serializer=MessageManager__pb2.SubscribeTopicRequest.SerializeToString,
                response_deserializer=MessageManager__pb2.SubscribeTopicResponse.FromString,
                _registered_method=True)
        self.SendMessage = channel.stream_unary(
                '/com.coreplantform.daemonproceed.controller.grpc.MessageManagerService/SendMessage',
                request_serializer=MessageManager__pb2.SendMessageRequest.SerializeToString,
                response_deserializer=MessageManager__pb2.SendMessageResponse.FromString,
                _registered_method=True)
        self.SendResult = channel.unary_unary(
                '/com.coreplantform.daemonproceed.controller.grpc.MessageManagerService/SendResult',
                request_serializer=MessageManager__pb2.SendResultRequest.SerializeToString,
                response_deserializer=MessageManager__pb2.SendResultResponse.FromString,
                _registered_method=True)
        self.UnsubscribeTopic = channel.unary_unary(
                '/com.coreplantform.daemonproceed.controller.grpc.MessageManagerService/UnsubscribeTopic',
                request_serializer=MessageManager__pb2.UnsubscribeTopicRequest.SerializeToString,
                response_deserializer=MessageManager__pb2.UnsubscribeTopicResponse.FromString,
                _registered_method=True)
        self.CancelAddListenerOnBindMessage = channel.unary_unary(
                '/com.coreplantform.daemonproceed.controller.grpc.MessageManagerService/CancelAddListenerOnBindMessage',
                request_serializer=MessageManager__pb2.CancelAddListenerOnBindMessageRequest.SerializeToString,
                response_deserializer=MessageManager__pb2.CancelAddListenerOnBindMessageResponse.FromString,
                _registered_method=True)


class MessageManagerServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def BindMessage(self, request, context):
        """2.4.1.	话题绑定
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddListenerOnBindMessage(self, request, context):
        """2.4.2.	话题绑定监听
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ConfirmBindMessage(self, request, context):
        """2.4.3.	中控确认话题绑定
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTopicByMessageKey(self, request, context):
        """2.4.4.	通过message_key获取topic
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubscribeTopic(self, request, context):
        """2.4.5.	话题订阅
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendMessage(self, request_iterator, context):
        """2.4.6.	消息发送
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendResult(self, request, context):
        """2.4.7. 单次信息结果 发送
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UnsubscribeTopic(self, request, context):
        """2.4.8.	话题取消订阅
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CancelAddListenerOnBindMessage(self, request, context):
        """2.4.9.	取消话题绑定监听
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MessageManagerServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'BindMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.BindMessage,
                    request_deserializer=MessageManager__pb2.BindMessageRequest.FromString,
                    response_serializer=MessageManager__pb2.BindMessageResponse.SerializeToString,
            ),
            'AddListenerOnBindMessage': grpc.unary_stream_rpc_method_handler(
                    servicer.AddListenerOnBindMessage,
                    request_deserializer=MessageManager__pb2.AddListenerOnBindMessageRequest.FromString,
                    response_serializer=MessageManager__pb2.AddListenerOnBindMessageResponse.SerializeToString,
            ),
            'ConfirmBindMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.ConfirmBindMessage,
                    request_deserializer=MessageManager__pb2.ConfirmBindMessageRequest.FromString,
                    response_serializer=MessageManager__pb2.ConfirmBindMessageResponse.SerializeToString,
            ),
            'GetTopicByMessageKey': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTopicByMessageKey,
                    request_deserializer=MessageManager__pb2.GetTopicByMessageKeyRequest.FromString,
                    response_serializer=MessageManager__pb2.GetTopicByMessageKeyResponse.SerializeToString,
            ),
            'SubscribeTopic': grpc.unary_stream_rpc_method_handler(
                    servicer.SubscribeTopic,
                    request_deserializer=MessageManager__pb2.SubscribeTopicRequest.FromString,
                    response_serializer=MessageManager__pb2.SubscribeTopicResponse.SerializeToString,
            ),
            'SendMessage': grpc.stream_unary_rpc_method_handler(
                    servicer.SendMessage,
                    request_deserializer=MessageManager__pb2.SendMessageRequest.FromString,
                    response_serializer=MessageManager__pb2.SendMessageResponse.SerializeToString,
            ),
            'SendResult': grpc.unary_unary_rpc_method_handler(
                    servicer.SendResult,
                    request_deserializer=MessageManager__pb2.SendResultRequest.FromString,
                    response_serializer=MessageManager__pb2.SendResultResponse.SerializeToString,
            ),
            'UnsubscribeTopic': grpc.unary_unary_rpc_method_handler(
                    servicer.UnsubscribeTopic,
                    request_deserializer=MessageManager__pb2.UnsubscribeTopicRequest.FromString,
                    response_serializer=MessageManager__pb2.UnsubscribeTopicResponse.SerializeToString,
            ),
            'CancelAddListenerOnBindMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.CancelAddListenerOnBindMessage,
                    request_deserializer=MessageManager__pb2.CancelAddListenerOnBindMessageRequest.FromString,
                    response_serializer=MessageManager__pb2.CancelAddListenerOnBindMessageResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'com.coreplantform.daemonproceed.controller.grpc.MessageManagerService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('com.coreplantform.daemonproceed.controller.grpc.MessageManagerService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class MessageManagerService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def BindMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/com.coreplantform.daemonproceed.controller.grpc.MessageManagerService/BindMessage',
            MessageManager__pb2.BindMessageRequest.SerializeToString,
            MessageManager__pb2.BindMessageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AddListenerOnBindMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/com.coreplantform.daemonproceed.controller.grpc.MessageManagerService/AddListenerOnBindMessage',
            MessageManager__pb2.AddListenerOnBindMessageRequest.SerializeToString,
            MessageManager__pb2.AddListenerOnBindMessageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ConfirmBindMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/com.coreplantform.daemonproceed.controller.grpc.MessageManagerService/ConfirmBindMessage',
            MessageManager__pb2.ConfirmBindMessageRequest.SerializeToString,
            MessageManager__pb2.ConfirmBindMessageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetTopicByMessageKey(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/com.coreplantform.daemonproceed.controller.grpc.MessageManagerService/GetTopicByMessageKey',
            MessageManager__pb2.GetTopicByMessageKeyRequest.SerializeToString,
            MessageManager__pb2.GetTopicByMessageKeyResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SubscribeTopic(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/com.coreplantform.daemonproceed.controller.grpc.MessageManagerService/SubscribeTopic',
            MessageManager__pb2.SubscribeTopicRequest.SerializeToString,
            MessageManager__pb2.SubscribeTopicResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SendMessage(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(
            request_iterator,
            target,
            '/com.coreplantform.daemonproceed.controller.grpc.MessageManagerService/SendMessage',
            MessageManager__pb2.SendMessageRequest.SerializeToString,
            MessageManager__pb2.SendMessageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SendResult(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/com.coreplantform.daemonproceed.controller.grpc.MessageManagerService/SendResult',
            MessageManager__pb2.SendResultRequest.SerializeToString,
            MessageManager__pb2.SendResultResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UnsubscribeTopic(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/com.coreplantform.daemonproceed.controller.grpc.MessageManagerService/UnsubscribeTopic',
            MessageManager__pb2.UnsubscribeTopicRequest.SerializeToString,
            MessageManager__pb2.UnsubscribeTopicResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CancelAddListenerOnBindMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/com.coreplantform.daemonproceed.controller.grpc.MessageManagerService/CancelAddListenerOnBindMessage',
            MessageManager__pb2.CancelAddListenerOnBindMessageRequest.SerializeToString,
            MessageManager__pb2.CancelAddListenerOnBindMessageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
